<chapter id="logmanager_logapp_management">
	<title>Log Application Management</title>
	<para>Log Application 이라함은 로그를 관리할 대상 웹 어플리케이션을 의미한다.</para>
	<para>대상 웹 어플리케이션(이하 Log Application)의 어플리케이션 아이디와 log4j.xml 파일의 경로정보를 등록하여 관리한다.</para>
	<para>로그 어플리케이션의 주요 기능은 다음과 같다.</para>
	<itemizedlist>
		<listitem><para>로그 어플리케이션의 등록/수정/삭제</para></listitem>
		<listitem><para>로그 어플리케이션의 로그들의 조회권한(Admin/Developer) 설정</para></listitem>
		<listitem><para>로그 어플리케이션 Status 관리(Active/Inactive/Failed)</para></listitem>
		<listitem><para>로그 어플리케이션의 logger 에 대한 로그 레벨 변경</para></listitem>
	</itemizedlist>
	<section id="logmanager_logapp_list">
		<title>Log Application 목록</title>
		<para>다음은 로그 어플리케이션의 목록화면이다.</para>
		<para>로그 어플리케이션의 목록화면에서는 다음과 같은 기능을 제공한다.</para>
		<itemizedlist>
			<listitem><para>로그 어플리케이션의 등록 화면 호출</para></listitem>
			<listitem><para>로그 어플리케이션의 상세조회 및 수정화면 호출</para></listitem>
			<listitem><para>로그 어플리케이션 Status 관리 : Active to Inactive, Inactive to Active</para></listitem>
			<listitem><para>로그 어플리케이션의 삭제</para></listitem>
		</itemizedlist>
		<mediaobject>
			<imageobject role="html">
				<imagedata fileref="../image/logmanager/logmanager006.jpg" align="center" />
			</imageobject>
			<imageobject role="fo">
				<imagedata fileref="../image/logmanager/pdf/logmanager006.jpg" align="center" />
			</imageobject>
			<caption>Log Application List</caption>
		</mediaobject>
	</section>
	<section id="logmanager_logapp_add">
		<title>Log Application 등록</title>
		<para>다음은 로그 어플리케이션의 등록화면이다.</para>
		<para>로그 어플리케이션의 등록화면에서는 다음과 같은 기능을 제공한다.</para>
		<itemizedlist>
			<listitem><para>로그 어플리케이션의 아이디 입력(웹 어플리케이션의 Context Name과 동일해야 함)</para></listitem>
			<listitem><para>로그 어플리케이션의 log4j.xml 경로 입력(접근 가능한 UNC 경로만 입력가능)</para></listitem>
			<listitem><para>'Load' 버튼을 통한 어플리케이션 로그 정책 정보 Loading</para></listitem>
			<listitem><para>로그 어플리케이션의 Logger 로그레벨 변경</para></listitem>
			<listitem><para>MongoDB를 위한 Appender의 조회 권한(Admin Only/Developer Visible) 설정</para></listitem>
		</itemizedlist>
		<mediaobject>
			<imageobject role="html">
				<imagedata fileref="../image/logmanager/logmanager007.jpg" align="center" />
			</imageobject>
			<imageobject role="fo">
				<imagedata fileref="../image/logmanager/pdf/logmanager007.jpg" align="center" />
			</imageobject>
			<caption>Log Application Regist/Update</caption>
		</mediaobject>
		<para>수정 및 상세 조회의 경우 어플리케이션 아이디 변경만 불가능하고 나머지 기능은 동일하다</para>
		<warning>
			<title>로그 어플리케이션 관련 제약사항</title>
			<para>1. Log Analysis를 통해 로그 데이타가 정상적으로 조회되기 위해서는 Log Application의 Root Context Name과 App. Name이 반드시 일치하여야 한다.</para>
			<para>2. 어플리케이션 로그를 조회하고 어플리케이션의 로그 정책을 관리하기 위해서는 어플리케이션 아이디와 log4j.xml 경로를 입력하여야 한다.</para>
			<para>그러나 Log Manager Web 모듈과 해당 로그 어플리케이션이 물리적으로 분리되어 있는 경우에는 현재 버전에서는 로그 어플리케이션으로 관리하는 것이 불가능하다.</para>
			<para>따라서 이런 경우에는 물리적 서버 당 1ea 씩 Log Manager Web 모듈을 설치하여야 한다.</para>
		</warning>
		<warning>
			<title>로그 어플리케이션의 Appender 목록 조회 조건</title>
			<para>등록/수정 화면의 Appender 섹션에서는 해당 어플리케이션에 등록된 Appender 정보 중 Appender Class가 '<emphasis role="bold">org.anyframe.logmanager.log4mongo.MongoDbPatternLayoutAppender</emphasis>'로 등록된 Appender 만을 조회할 수 있다.</para>
		</warning>
		<warning>
			<title>로그 정책 변경 시 실시간 반영</title>
			<para>Anyframe Log Agent Plugin을 설치하게 되면 해당 로그에 대한 정책설정을 주기적으로 watch 하도록 Application 설정이 변경된다.</para>
			<para>또한 Log Manager Web 모듈에서 로그 정책을 수정하게 되면 실제로 해당 로그 어플리케이션의 log4j.xml이 변경되며, 결과적으로 변경된 로그 정책이 실시간으로 반영되게 된다.</para>
		</warning>
	</section>
</chapter>